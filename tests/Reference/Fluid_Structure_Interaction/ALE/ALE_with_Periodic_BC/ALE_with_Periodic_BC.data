# Hydraulique 2D laminar with ALE : interaction of two cylinders subjected to small oscillations #
# Periodic boundary condition  #
# Warning : this is a numerical test case, we do not look at physical aspects in detail here #



dimension 2

Pb_hydraulique_ALE pb
Domaine_ALE dom 



# BEGIN SCATTER #
# Scatter ../DOM.Zones dom #
# END SCATTER #


Lire_MED { domaine dom fichier Mesh.med }


imposer_vit_bords_ale dom
{
	1 # number of mobile boundaries  #
	Cylinder2 Champ_front_ALE 2 0.01*(9.063e-4)*cos((9.063e-4)*t) 0.0   # name and speed of the border #
}

# Solver used in order to solve the system giving the moving mesh velocity #
Solver_moving_mesh_ALE dom { Petsc Cholesky {  } } 

# I select a discretization #
VEFPreP1B ma_discretisation

# Time scheme, choice between: explicit or implicit #
Scheme_euler_implicit mon_schema
Read mon_schema
{
 	# Time step #
        # Initial time [s] #
        tinit 0.
	# Min time step #
        dt_min 1.e-15
        # dt_max 1.e-3 #
	# Output criteria #
        # .out files printing period #
        dt_impr 5.e-8
	# .sauv files printing period #
	tcpumax 47.5
	# .sauv files printing period #
        periode_sauvegarde_securite_en_heures 23
 	# facsec such as dt = facsec * min(dt(CFL),dt_max) ; for explicit scheme facsec <= 1. By default facsec equals to 1 #
	facsec 1.
        facsec_max 1.
	solveur implicite_ALE
	{
          solveur gmres { diag seuil 1.e-12 nb_it_max 3 } 
	}
	# Stop if one of the following criteria is checked: #
        # End time [s] #
	tmax  6933  
	# Max number of time steps #
        # nb_pas_dt_max 1 #
        # Convergence threshold (see .dt_ev file) #
	seuil_statio 1.e-15
}

# Association between the different objects #
Associate pb dom
Associate pb mon_schema
Discretize pb ma_discretisation

Read pb
{
Fluide_Incompressible 
{
	mu Champ_Uniforme 1 1.007e-3
	rho Champ_Uniforme 1 1000
}



	Navier_Stokes_standard_ALE
	{
		# Pressure matrix solved with #
 		solveur_pression petsc cholesky { }
		# Two operators are defined #
		convection {  ALE { muscl } } # A convective scheme for ALE framework : choice between: amont and muscl  #
		diffusion { }
		# Uniform initial condition for velocity #
		initial_conditions {
			vitesse Champ_Uniforme 2 0. 0.
			}
		# sources { Canal_perio { bord RectangleV } }	#
		# Boundary conditions #
		boundary_conditions {
			Cylinder2  frontiere_ouverte_vitesse_imposee_ALE Champ_front_ALE 2 0.01*(9.063e-4)*cos((9.063e-4)*t) 0.0  # name and speed of the border #
			# Cylinder2 paroi_fixe #
			Cylinder1  paroi_fixe
			RectangleH periodique
			RectangleV periodique
		}
	}
	Post_processing
	{
          
		# Fields #
		format lml 
		fields dt_post 1000
		{
			pression_pa som
			vitesse som
			ALEMeshVelocity som
			ALEMeshTotalDisplacement som
		}
} 

}

# The problem is solved with #
Solve pb

# Not necessary keyword to finish #
End
